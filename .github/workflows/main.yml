# This is the name of the workflow, visible on GitHub UI.
name: test
 
# Here we tell GitHub to run the workflow when a commit
# is pushed or a Pull Request is opened.
on: [push, pull_request]
 
# This is the list of jobs that will be run concurrently.
# Since we use a build matrix, the actual number of jobs
# started depends on how many configurations the matrix
# will produce.
jobs:
  # This is the name of the job - can be whatever.
  test-matrix:
 
    # Here we tell GitHub that the jobs must be determined
    # dynamically depending on a matrix configuration.
    strategy:
      matrix:
        # The matrix will produce one job for each configuration
        # parameter of type arduino-platform, in this case a
        # total of 2.
        arduino-platform: ["arduino:samd","arduino:samd","esp32:esp32"]
        # This is usually optional but we need to statically define the
        # FQBN of the boards we want to test for each platform. In the
        # future the CLI might automatically detect and download the core
        # needed to compile against a certain FQBN, at that point the
        # following include section will be useless.
        include:
          # This works like this: when the platform is "arduino:samd", the
          # variable fqbn is set to "arduino:samd:nano_33_iot".
          - arduino-platform: "arduino:samd"
            fqbn: "arduino:samd:nano_33_iot"
          - arduino-platform: "arduino:samd"
            fqbn: "arduino:samd:mkrwifi1010"
          - arduino-platform: "esp32:esp32"
            fqbn: "esp32:esp32:esp32-poe"
 
    # This is the platform GitHub will use to run our workflow, we
    # pick Windows for no particular reason.
    runs-on: windows-latest
 
    # This is the list of steps this job will run.
    steps:
      # First of all, we clone the repo using the checkout action.
      - name: Checkout
        uses: actions/checkout@master
 
      # We use the arduino/setup-arduino-cli action to install and
      # configure the Arduino CLI on the system.
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1.1.1
 
      # We then install the platform, which one will be determined
      # dynamically by the build matrix.
      - name: Install platform
        run: |
          arduino-cli core update-index --additional-urls https://dl.espressif.com/dl/package_esp32_index.json
          arduino-cli core install ${{ matrix.arduino-platform }} --additional-urls https://dl.espressif.com/dl/package_esp32_index.json
          arduino-cli lib install ArduinoHttpClient
          arduino-cli lib install RTCZero
          arduino-cli lib install SD
          arduino-cli lib install WiFi
          arduino-cli lib install WiFiNINA
          arduino-cli lib install ArduinoOTA
          arduino-cli lib install AzureIoTHub
          arduino-cli lib install PubSubClient
          arduino-cli lib install SimpleDHT
          arduino-cli lib install "SparkFun ATECCX08a Arduino Library"
          arduino-cli lib install Arduino_LSM6DS3
          arduino-cli lib install FastLED
          arduino-cli lib install JsonLogger
          
      - name: Configure MQTT Size
        run: ((Get-Content -path "~\Documents\Arduino\libraries\PubSubClient\src\PubSubClient.h" -Raw) -replace '#define MQTT_MAX_PACKET_SIZE 128','#define MQTT_MAX_PACKET_SIZE 2048') | Set-Content -Path "~\Documents\Arduino\libraries\PubSubClient\src\PubSubClient.h"
          
      - name: Create dummy secrets file
        run: cp ./src/secrets.default.h ./src/secrets.h
      
      - name: Create build folder
        run: mkdir ./build
        
      - name: Copy ESP32 Partitions file
        run: cp ./src/partitions.csv ./build/partitions.csv
 
      # Finally, we compile the sketch, using the FQBN that was set
      # in the build matrix.
      - name: Compile Sketch
        run: arduino-cli compile --build-path $PWD/build -v --fqbn ${{ matrix.fqbn }} ./src
        
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            ./build
